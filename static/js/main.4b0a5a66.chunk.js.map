{"version":3,"sources":["resources/picture.svg","logo.svg","components/ResultTable.js","components/Main.js","components/Character.js","components/TaskNavigation.js","components/TaskContent.js","components/Task.js","components/HeaderTabs.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","table","minWidth","createData","subject","personalScore","classScore","rows","ResultTable","classes","TableContainer","component","Paper","Table","className","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","key","scope","Main","React","Component","Character","src","picture","prepareData","data","root","level","a","i","length","parentId","obj","id","text","subList","push","TaskNavigation","props","state","expandedItems","SelectedId","renderItem","bind","isExpanded","toggleExpanded","item","this","indexOf","setState","selectedId","onSelectedIdChanged","newExpandedItems","hasChildren","splice","ListItem","button","selected","onClick","changeSelectedItem","ListItemText","primary","style","paddingLeft","IconButton","size","e","stopPropagation","Collapse","in","List","1","title","theory","content","practice","2","11","12","21","TabPanel","children","value","index","hidden","Box","p","a11yProps","theme","flexGrow","backgroundColor","palette","background","paper","TaskContent","useState","setValue","AppBar","position","color","Tabs","onChange","event","newValue","Tab","label","Typography","variant","display","width","navigation","Task","setSelectedId","SimpleTabs","App","mainPage","currentSection","sections","item1","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4b0a5a66.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/picture.e1ddb0c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nfunction createData(subject, personalScore, classScore) {\n  return { subject, personalScore, classScore };\n}\n\nconst rows = [\n  createData('Математика', 4, 6),\n  createData('Информатика', 9, 9),\n  createData('Физика', 6, 9),\n  createData('Русский язык', 10, 8),\n  createData('История', 8, 7),\n];\n\nexport default function ResultTable() {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Предметы</TableCell>\n            <TableCell align=\"center\">Личный&nbsp;балл</TableCell>\n            <TableCell align=\"center\">Балл&nbsp;класса</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.subject}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.subject}\n              </TableCell>\n              <TableCell align=\"center\">{row.personalScore}</TableCell>\n              <TableCell align=\"center\">{row.classScore}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}","import React from 'react';\nimport ResultTable from './ResultTable';\n\nclass Main extends React.Component{\n  render(){\n    return <ResultTable/>;\n  }\n}\nexport default Main;","import React from 'react';\nimport './Character.css';\nimport picture from '../resources/picture.svg';\n\nclass Character extends React.Component{\n  render(){\n    return(\n     <div className=\"CharacterPage\">\n        <img src={picture} className=\"Face\"/>\n     </div>\n     );\n  }\n}\nexport default Character;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nfunction getPaddingStyle(level) {\r\n\treturn {\r\n\t\tpaddingLeft: `${level*20}px`\r\n\t};\r\n}\r\nfunction prepareData(data, root, level) {\r\n\tlet a = [];\r\n\tfor (let i = 0; i < data.length; i++) {\r\n\t\tif (data[i].parentId === root) {\r\n\t\t\tlet obj = {\r\n\t\t\t\tid: data[i].id,\r\n\t\t\t\ttext: data[i].text,\r\n\t\t\t\tlevel: level,\r\n\t\t\t\tsubList: prepareData(data, data[i].id, level + 1)\r\n\t\t\t}\r\n\t\t\ta.push(obj);\r\n\t\t}\r\n\t}\r\n\tif (a.length === 0) {\r\n\t\ta = null;\r\n\t}\r\n\treturn a;\r\n}\r\n\r\n\r\nclass TaskNavigation extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\texpandedItems: [1],\r\n\t\t\tdata: prepareData(props.data, null, 0),\r\n\t\t\tSelectedId: 1\r\n\t\t};\r\n\t\tthis.renderItem = this.renderItem.bind(this);\r\n\t\tthis.isExpanded = this.isExpanded.bind(this);\r\n\t\tthis.toggleExpanded = this.toggleExpanded.bind(this);\r\n\t}\r\n\tisExpanded(item) {\r\n\t\treturn (this.state.expandedItems.indexOf(item.id) !== -1);\r\n\t}\r\n\thasChildren(item) {\r\n\t\treturn (item.subList && item.subList.length);\r\n\t}\r\n\tchangeSelectedItem(item) {\r\n\t\tthis.setState({selectedId: item.id});\r\n\t\tthis.props.onSelectedIdChanged(item.id);\r\n\t}\r\n\ttoggleExpanded(item) {\r\n\t\tlet newExpandedItems = [...this.state.expandedItems];\r\n\t\tif (this.hasChildren(item)) {\r\n\t\t\tif (this.isExpanded(item)) {\r\n\t\t\t\tnewExpandedItems.splice(newExpandedItems.indexOf(item.id), 1);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tnewExpandedItems.push(item.id);\r\n\t\t\t}\r\n\t\t\tthis.setState({expandedItems: newExpandedItems});\r\n\t\t}\r\n\t}\r\n\trenderItem(item) {\r\n\t\treturn (\r\n\t\t\t<div key={item.id}>\r\n\t\t\t\t<ListItem button \r\n\t\t\t\t\tselected={this.state.selectedId === item.id}\r\n\t\t\t\t\tonClick={() => { \r\n\t\t\t\t\t\t\t\t\t\tthis.changeSelectedItem(item);\r\n\t\t\t\t \t\t\t\t\t}}>\r\n\t\t\t        <ListItemText primary={item.text} style={getPaddingStyle(item.level)}/>\r\n\r\n\t\t\t        {this.hasChildren(item) ?\r\n\t\t\t        \t\t\t\t(<IconButton size=\"small\" onClick={(e) => { \r\n\t\t\t\t\t\t\t\t\t\tthis.toggleExpanded(item);\r\n\t\t\t\t\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t \t\t\t\t\t}}>\r\n\t\t\t\t \t\t\t\t\t{this.isExpanded(item) ? <ExpandLess /> : <ExpandMore />}\r\n\t\t\t\t \t\t\t\t\t</IconButton>) : <></>}\r\n\t\t\t    </ListItem>\r\n\t\t\t\t{\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.hasChildren(item) ? \r\n\t\t\t\t\t\t<Collapse in={this.isExpanded(item)}>\r\n\r\n\t\t\t\t\t\t\t{item.subList.map(this.renderItem)}\r\n\r\n\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t: <></>\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<List className={this.props.className}>\r\n\t\t\t\t{this.state.data.map(this.renderItem)}\r\n\t\t\t</List>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default TaskNavigation;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst data = {\r\n  1: {\r\n    title: 'Математика',\r\n    theory: {\r\n      content: 'теория Математика'\r\n    },\r\n    practice: {\r\n      content: 'Практика Математика'\r\n    }\r\n  },\r\n  2: {\r\n    title: 'Информатика',\r\n    theory: {\r\n      content: 'теория Информатика'\r\n    },\r\n    practice: {\r\n      content: 'Практика Информатика'\r\n    }\r\n  },\r\n  11: {\r\n    title: 'Алгебра',\r\n    theory: {\r\n      content: 'теория Алгебра'\r\n    },\r\n    practice: {\r\n      content: 'Практика Алгебра'\r\n    }\r\n  },\r\n  12: {\r\n    title: 'Геометрия',\r\n    theory: {\r\n      content: 'теория Геометрия'\r\n    },\r\n    practice: {\r\n      content: 'Практика Геометрия'\r\n    }\r\n  },\r\n  21: {\r\n    title: 'Программирование',\r\n    theory: {\r\n      content: 'Теория Программирование'\r\n    },\r\n    practice: {\r\n      content: 'Практика Программирование'\r\n    }\r\n  }\r\n}\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index} = props;\r\n\r\n  return (\r\n    <div\r\n      component=\"div\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function TaskContent(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <AppBar  position=\"static\" color=\"default\">\r\n          <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n            <Tab label=\"Теория\" {...a11yProps(0)} />\r\n            <Tab label=\"Практика\" {...a11yProps(1)} />\r\n          </Tabs>\r\n        </AppBar>\r\n        <TabPanel value={value} index={0}>\r\n          <Typography variant='h4'>{data[props.selectedId].title}</Typography>\r\n          <Typography>{data[props.selectedId].theory.content}</Typography>\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1}>\r\n          <Typography variant='h4'>{data[props.selectedId].title}</Typography>\r\n          <Typography>{data[props.selectedId].practice.content}</Typography>\r\n        </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport TaskNavigation from './TaskNavigation';\nimport TaskContent from './TaskContent';\n\n\nconst data = [\n  {\n    id: 1,\n    text: 'Математика',\n    parentId: null\n  },\n  {\n    id: 11,\n    text: 'Алгебра',\n    parentId: 1\n  },\n  {\n    id: 12,\n    text: 'Геометрия',\n    parentId: 1\n  },\n  {\n    id: 21,\n    text: 'Программирование',\n    parentId: 2\n  },\n  {\n    id: 2,\n    text: 'Информатика',\n    parentId: null\n  }\n];\n\n\nfunction TabPanel(props) {\n  const { children, value, index} = props;\n\n  return (\n    <div\n      component=\"div\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  content: {\n    width: '100%'\n  },\n  navigation: {\n    backgroundColor: theme.palette.background.paper,\n    minWidth: '200px',\n    width: '30%'\n  }\n}));\n\nexport default function Task(props) {\n  const classes = useStyles();\n  const [selectedId, setSelectedId] = React.useState(1);\n\n  const SelectedIdChangedHandler = (newValue) => {\n    setSelectedId(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <TaskNavigation className={classes.navigation} data={data} onSelectedIdChanged={SelectedIdChangedHandler}/>\n      <div className={classes.content}>\n        <TaskContent selectedId={selectedId}/>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Main from './Main';\nimport Character from './Character';\nimport Task from './Task';\n\nfunction TabPanel(props) {\n  const { children, value, index } = props;\n\n  return (\n    <div\n      className=\"TabContent\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n    >\n      {value === index && <div p={3}>{children}</div>}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function SimpleTabs(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n          <Tab label=\"Главный экран\" {...a11yProps(0)} />\n          <Tab label=\"Персонаж\" {...a11yProps(1)} />\n          <Tab label=\"Задания\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <Main/>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Character/>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <Task/>\n      </TabPanel>\n    </div>\n  );\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport HeaderTabs from './components/HeaderTabs';\n\nclass App extends React.Component{\n  constructor(props) {\n    super(props)\n    this.state = {\n            mainPage:(\n<div> Главная Страница</div>\n              ),\n            currentSection: 'main', \n            sections: [{id:'main', text:'Главный экран'},\n                       {id:'character', text:'Персонаж'},\n                       {id:'tasks', text:'Задания'}]\n                  }\n  }\n  render(){return (\n    <div>\n     <HeaderTabs item1={this.state.mainPage}/> \n    </div>\n  );}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'typeface-roboto';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}